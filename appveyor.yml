# MediaWEB appveyor configuration for Windows (x64) and Linux (x64 + ARM)

# Common configuration
image: 
- Visual Studio 2017
- Ubuntu

platform: x64

# Do not build on tags (GitHub and BitBucket)
skip_tags: true

version: 1.1.0.{build}

stack: go 1.11

install:
  # Windows
  - cmd: set PATH=%GOPATH%\bin;%PATH%
  - cmd: '%GOPATH%\src\github.com\midstar\mediaweb\scripts\install_deps.bat'

  # Linux
  - sh: export GOPATH=/usr/go
  - sh: export PATH=$GOPATH/bin:$PATH
  - sh: sudo chmod -R a+rwx $GOPATH
  - sh: go get github.com/mattn/goveralls
  - sh: sh $GOPATH/src/github.com/midstar/mediaweb/scripts/install_deps.sh

  # Linux install ffmpeg
  - sh: sudo apt -yq update > /dev/null
  - sh: sudo apt install -yq --no-install-suggests --no-install-recommends ffmpeg > /dev/null

  # Linux install lintian
  - sh: sudo apt-get install -y lintian

build_script:
  # Common
  - go test -v -cover github.com/midstar/mediaweb -coverprofile=coverage.out

  # Publish result on coveralls.io (pick the Linux result since we have ffmpeg there)
  - sh: '$GOPATH/bin/goveralls -coverprofile=coverage.out -service=appveyor-ci -repotoken=$COVERALLS_TOKEN'

  # Windows build and zip
  - cmd: '%GOPATH%\src\github.com\midstar\mediaweb\scripts\build.bat %APPVEYOR_BUILD_VERSION%'
  - cmd: 'copy scripts\service.bat .'
  - cmd: 'copy configs\mediaweb.conf .'
  - cmd: 7z a mediaweb_windows_x64.zip mediaweb.exe mediaweb.conf service.bat

  # Windows rename tempates directory to secure that packr is working
  - cmd: 'rename templates old_templates'

  # Windows Test service installation/uninstallation script
  - cmd: 'scripts/service_test.bat'

  # Windows create windows setup (installer)
  - cmd: 'makensis -DVERSION=%APPVEYOR_BUILD_VERSION% %GOPATH%\src\github.com\midstar\mediaweb\scripts\windows_installer.nsi'

  # Linux PC/x64 build and zip
  - sh: 'sh $GOPATH/src/github.com/midstar/mediaweb/scripts/build.sh $APPVEYOR_BUILD_VERSION'
  - sh: 'cp scripts/service.sh .'
  - sh: 'cp configs/mediaweb.conf .'
  - sh: tar -zcvf mediaweb_linux_x64.tar.gz  mediaweb mediaweb.conf service.sh

  # Linux Test service installation/uninstallation script
  - sh: 'sudo -E sh scripts/service_test.sh'

  # Linux Debian create package (installer) - for PC (x64)
  - sh: 'sh scripts/debian_installer.sh amd64 $APPVEYOR_BUILD_VERSION mediaweb_linux_x64' 

  # Linux ARM (cross compile from linux x64)
  - sh: rm mediaweb
  - sh: 'sh $GOPATH/src/github.com/midstar/mediaweb/scripts/build_cross_arm.sh $APPVEYOR_BUILD_VERSION'
  - sh: tar -zcvf mediaweb_linux_arm.tar.gz mediaweb mediaweb.conf service.sh

  # Linux Debian create package (installer) - for ARM64
  - sh: 'sh scripts/debian_installer.sh arm64 $APPVEYOR_BUILD_VERSION mediaweb_linux_arm' 

# Deploy to GitHub (only on master AND on tags)
deploy:
  release: mediaweb-v$(APPVEYOR_BUILD_VERSION)
  description: ''
  provider: GitHub
  auth_token:
    secure: C6VrW1yhX0pNCEarV0anjNU8gcM0tKbMGf+7yhuh8rLe+HnCzlzLu9Uq7EWMtYHG
  draft: false
  prerelease: false
  on:
    branch: master

for:
  
# Special configurations for Windows
-
  matrix:
    only:
      - image: Visual Studio 2017

  clone_folder: c:\gopath\src\github.com\midstar\mediaweb

  environment:
    GOPATH: c:\gopath

  artifacts:
    - path: mediaweb_windows_x64.zip
      name: mediaweb_windows_x64.zip
    - path: mediaweb_windows_x64_setup.exe
      name: mediaweb_windows_x64_setup.exe

# Special configurations for Linux
-
  matrix:
    only:
      - image: Ubuntu

  clone_folder: /usr/go/src/github.com/midstar/mediaweb

  environment:
    GOPATH: /usr/go

  artifacts:
    - path: mediaweb_linux_x64.tar.gz
      name: mediaweb_linux_x64.tar.gz
    - path: mediaweb_linux_arm.tar.gz
      name: mediaweb_linux_arm.tar.gz
    - path: mediaweb_linux_x64.deb
      name: mediaweb_linux_x64.deb
    - path: mediaweb_linux_arm.deb
      name: mediaweb_linux_arm.deb

